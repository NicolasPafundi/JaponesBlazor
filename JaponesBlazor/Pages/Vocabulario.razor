@page "/capitulo/{Id:int}/vocabulario"
@using JaponesBlazor.Component
@inject HttpClient Http

<div class="header-bar mb-8">
    <BackButton />
    <h1 class="titulo-centrado">📚 Vocabulario – Capítulo @Id</h1>
    <div class="header-bar-space"></div>
</div>

@if (cargando)
{
    <p class="text-center text-gray-500">Cargando...</p>
}
else if (!Items.Any())
{
    <p class="text-center text-red-500">No se encontró vocabulario para este capítulo.</p>
}
else
{
    @foreach (var grupo in Items.GroupBy(x => x.Categoria))
    {
        <div class="categoria-group mb-10 p-4 rounded-lg bg-blue-50 shadow-sm w-full">
            <h2 class="mb-4 text-xl font-semibold text-blue-800 border-b border-blue-200 pb-2">@grupo.Key</h2>
            <div class="vocab-list flex flex-col gap-3">
                @foreach (var palabra in grupo)
                {
                    <div class="bg-yellow-50 p-3 rounded border shadow-sm flex items-center gap-4 vocab-item">
                        <PlayJapanese Texto="@palabra.Jap" />
                        <span class="jap-word">@palabra.Jap</span>
                        <span class="translation">– @palabra.Esp</span>
                    </div>
                }
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public int Id { get; set; }

    private List<VocabularioModel>? Items;
    bool cargando = true;

    protected override async Task OnInitializedAsync()
    {
        var all = await Http.GetFromJsonAsync<List<VocabularioModel>>("data/Vocabulario.json");
        Items = all?.Where(x => x.CapituloId == Id).ToList() ?? new();
        cargando = false;
    }
}